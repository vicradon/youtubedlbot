name: App Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to Virtual Machine
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Zip repository content
        run: git ls-files -z | xargs -0 zip archive.zip

      - name: copy file via ssh key
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DEPLOYMENT_HOST }}
          username: ${{ secrets.VM_USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          source: "archive.zip"
          target: ${{secrets.DEPLOYMENT_DIRECTORY}}

      - name: SSH into server and update application code
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOYMENT_HOST }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ${{secrets.DEPLOYMENT_DIRECTORY}}
            unzip -o archive.zip

      - name: Install dependencies
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOYMENT_HOST }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ${{secrets.DEPLOYMENT_DIRECTORY}}
            python3 -m venv .venv  # Create virtual environment (adjust command if needed)
            source .venv/bin/activate  # Activate virtual environment
            pip install -r requirements.txt  # Install dependencies from requirements.txt

      - name: Set environment variables and Restart app
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOYMENT_HOST }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            (source .venv/bin/activate  # Activate virtual environment
            export TELEGRAM_BOT_TOKEN=***
            (pkill -f main.py || true)  # Stop the bot if running, ignore errors if not running
            nohup python main.py > /dev/null 2>&1 &  # Start the bot in the background
            )
